rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read all user documents for search functionality
    match /users/{userId} {
      allow read: if request.auth != null;
    }
    
    // Friend requests - users can read requests sent to them or by them
    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
    }
    
    // Friends collection - users can read friendships they're part of
    match /friends/{friendshipId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.user1 || 
         request.auth.uid == resource.data.user2);
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.user1 || 
         request.auth.uid == request.resource.data.user2);
    }
    
    // Bills - users can read/write bills they created or are split with
    match /bills/{billId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.uid in resource.data.splitTo);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
    }
    
    // Exams - users can only access their own exams
    match /users/{userId}/exams/{examId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Groups - users can read/write groups they're members of
    match /groups/{groupId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.members;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.members;
        
      // Messages within groups
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
        allow create: if request.auth != null && 
          request.auth.uid == request.resource.data.senderId;
      }
    }
    
    // Notifications - users can read their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Status updates - users can read updates from friends and create their own
    match /status_updates/{updateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
  }
}